import{r as s,X as t,a4 as ee,a2 as R}from"./index-a9CePegO.js";const I={SINGLE:"single"},x={EASY:"easy",MEDIUM:"medium",HARD:"hard"},T={SPORT:"sport",SUV:"suv",TRUCK:"truck"},y=40,j=70,q=40,X=40,h=20,w=30,re=({gameMode:i,player1Name:v,difficulty:o,backToSettings:u})=>{const S=s.useRef(null),m=s.useRef(null);s.useEffect(()=>{const r=new Image;return r.src="/car1-icon.png",r.onload=()=>{m.current=r},r.onerror=()=>{m.current=null},()=>{m.current=null}},[]);const[f,d]=s.useState(!1),[C,A]=s.useState(!1),[G,P]=s.useState({player1:0}),[M,L]=s.useState(null),[b,F]=s.useState(3),e=s.useRef({player1:{x:0,y:0,speed:3,lane:1},obstacles:[],powerUps:[],roadSpeed:5,roadY:0,animationFrameId:0,keysPressed:new Set,shield:{player1:!1},speedBoost:{player1:0},lastObstacleTime:0,lastPowerUpTime:0,gameTime:0,difficultySpeed:o===x.EASY?3:o===x.MEDIUM?5:7,isGameOver:!1});s.useEffect(()=>{(()=>{const n=S.current;if(!n||!n.getContext("2d"))return;const E=(n.width-h*2)/3;e.current.player1={x:h+E*1+(E-y)/2,y:n.height-j-20,speed:3,lane:1},e.current.obstacles=[],e.current.powerUps=[],e.current.roadY=0,e.current.difficultySpeed=o===x.EASY?3:o===x.MEDIUM?5:7,P({player1:0}),L(null),F(3)})();const a=e.current.animationFrameId;return()=>{cancelAnimationFrame(a)}},[o,i]),s.useEffect(()=>{if(b===null)return;const r=setInterval(()=>{F(a=>a===null?null:a<=1?(clearInterval(r),A(!0),null):a-1)},1e3);return()=>clearInterval(r)},[b]),s.useEffect(()=>{const r=n=>{e.current.keysPressed.add(n.key)},a=n=>{e.current.keysPressed.delete(n.key)};return window.addEventListener("keydown",r),window.addEventListener("keyup",a),()=>{window.removeEventListener("keydown",r),window.removeEventListener("keyup",a)}},[]);const U=s.useRef(G);s.useEffect(()=>{U.current=G},[G]);const O=s.useCallback(r=>{const a=e.current.keysPressed;a.has("ArrowLeft")&&e.current.player1.lane>0&&(e.current.player1.lane=Math.max(0,e.current.player1.lane-.04),e.current.player1.x=h+e.current.player1.lane*r+(r-y)/2),a.has("ArrowRight")&&e.current.player1.lane<2&&(e.current.player1.lane=Math.min(2,e.current.player1.lane+.04),e.current.player1.x=h+e.current.player1.lane*r+(r-y)/2)},[]),D=s.useCallback((r,a,n,p)=>{r.fillStyle="#333",r.fillRect(h,0,a.width-h*2,a.height),r.strokeStyle="#fff",r.lineWidth=2,r.setLineDash([20,20]),e.current.roadY+=e.current.roadSpeed,e.current.roadY>40&&(e.current.roadY=0);for(let c=1;c<n;c++){const l=h+c*p;r.beginPath();let g=-40+e.current.roadY;for(;g<a.height;)r.moveTo(l,g),r.lineTo(l,g+20),g+=40;r.stroke()}r.setLineDash([])},[]),H=s.useCallback(r=>{const a=m.current;a?r.drawImage(a,e.current.player1.x,e.current.player1.y,y,j):(r.fillStyle="#FF5733",r.fillRect(e.current.player1.x,e.current.player1.y,y,j)),e.current.shield.player1&&(r.strokeStyle="#00FFFF",r.lineWidth=3,r.beginPath(),r.ellipse(e.current.player1.x+y/2,e.current.player1.y+j/2,y*.7,j*.7,0,0,Math.PI*2),r.stroke())},[]),Y=s.useCallback(r=>{r.fillStyle="#FFF",r.font="16px Arial",r.textAlign="left";const a=U.current;r.fillText(`${v}: ${Math.floor(a.player1)}`,20,30)},[v]),_=s.useCallback((r,a)=>{const n=Math.floor(Math.random()*r),p=h+n*a+(a-q)/2;e.current.obstacles.push({x:p,y:-X,lane:n,width:q,height:X})},[]),B=s.useCallback((r,a)=>{const n=r.getContext("2d");if(!n)return;const c=e.current.difficultySpeed+Math.min(5,e.current.gameTime/30);e.current.obstacles=e.current.obstacles.filter(l=>(l.y+=c*Math.max(1,a*60),n.fillStyle="#FF0000",n.fillRect(l.x,l.y,l.width,l.height),l.y<r.height))},[]),W=s.useCallback((r,a)=>{const n=Math.floor(Math.random()*r),p=h+n*a+(a-w)/2,c=Math.random()>.5?"speed":"shield";e.current.powerUps.push({x:p,y:-w,type:c,active:!0})},[]),K=s.useCallback((r,a)=>{const n=r.getContext("2d");if(!n)return;const c=e.current.difficultySpeed+Math.min(5,e.current.gameTime/30);e.current.powerUps=e.current.powerUps.filter(l=>l.active?(l.y+=c*Math.max(1,a*60),l.type==="speed"?n.fillStyle="#FFFF00":n.fillStyle="#00FFFF",n.beginPath(),n.arc(l.x+w/2,l.y+w/2,w/2,0,Math.PI*2),n.fill(),l.y<r.height):!1)},[]),V=s.useCallback(()=>{for(const r of e.current.obstacles)if(!e.current.shield.player1&&e.current.player1.x<r.x+r.width&&e.current.player1.x+y>r.x&&e.current.player1.y<r.y+r.height&&e.current.player1.y+j>r.y){z(null);return}for(const r of e.current.powerUps)r.active&&e.current.player1.x<r.x+w&&e.current.player1.x+y>r.x&&e.current.player1.y<r.y+w&&e.current.player1.y+j>r.y&&(r.active=!1,Z(r.type))},[]),Z=r=>{r==="speed"?e.current.speedBoost.player1=5:(e.current.shield.player1=!0,setTimeout(()=>{e.current.shield.player1=!1},5e3))},z=r=>{d(!0),L(r),e.current.isGameOver=!0,cancelAnimationFrame(e.current.animationFrameId)},$=()=>{d(!1),A(!1),F(3),P({player1:0}),e.current.isGameOver=!1,e.current.obstacles=[],e.current.powerUps=[],e.current.lastObstacleTime=0,e.current.lastPowerUpTime=0,e.current.gameTime=0,e.current.animationFrameId=0,e.current.shield={player1:!1},e.current.speedBoost={player1:0},e.current.player1&&(e.current.player1.speed=3)};return s.useEffect(()=>{if(!C||f)return;const r=S.current;if(!r)return;const a=r.getContext("2d");if(!a)return;const n=3,c=(r.width-h*2)/n;let l=performance.now();const g=N=>{const k=(N-l)/1e3;if(l=N,e.current.gameTime+=k,a.clearRect(0,0,r.width,r.height),D(a,r,n,c),O(c),B(r,k),K(r,k),H(a),Y(a),V(),e.current.isGameOver)return;N-e.current.lastObstacleTime>1500-o.length*200&&(_(n,c),e.current.lastObstacleTime=N),N-e.current.lastPowerUpTime>5e3&&Math.random()>.7&&(W(n,c),e.current.lastPowerUpTime=N),e.current.speedBoost.player1>0&&(e.current.speedBoost.player1-=k),P(Q=>({player1:Q.player1+k*10}));const J=requestAnimationFrame(g);e.current.animationFrameId=J},E=requestAnimationFrame(g);return e.current.animationFrameId=E,()=>{cancelAnimationFrame(E)}},[C,f,i,o,D,O,B,K,H,Y,V,_,W]),t.jsxs("div",{className:"carracing-game-container",children:[t.jsx("h1",{children:"Car Racing Game"}),t.jsxs("div",{className:"game-controls",children:[t.jsx("button",{onClick:u,className:"control-btn",children:"Back to Settings"}),f&&t.jsx("button",{onClick:$,className:"control-btn restart-btn",children:"Play Again"})]}),b!==null&&t.jsx("div",{className:"countdown-overlay",children:t.jsx("div",{className:"countdown",children:b})}),f&&t.jsxs("div",{className:"game-over-overlay",children:[t.jsx("h2",{children:"Game Over!"}),M?t.jsxs("p",{children:[M," wins!"]}):t.jsxs("p",{children:["Your score: ",Math.floor(G.player1)]}),t.jsx("div",{className:"game-over-actions",children:t.jsx("button",{onClick:$,className:"control-btn restart-btn",children:"Play Again"})})]}),t.jsxs("div",{className:"game-area",children:[t.jsx("canvas",{ref:S,width:600,height:500,className:"racing-canvas"}),!C&&b===null&&!f&&t.jsxs("div",{className:"instructions-overlay",children:[t.jsx("h3",{children:"Controls:"}),t.jsx("p",{children:"Player 1: Left/Right Arrow Keys"}),t.jsx("p",{children:"Avoid obstacles and collect power-ups!"})]})]}),t.jsx("div",{className:"game-info",children:t.jsxs("div",{className:"player-info",children:[t.jsx("span",{className:"player-name",children:v}),e.current.shield.player1&&t.jsx("span",{className:"power-up-indicator shield",children:"🛡️"}),e.current.speedBoost.player1>0&&t.jsx("span",{className:"power-up-indicator speed",children:"⚡"})]})})]})},te=()=>{const[i,v]=s.useState({gameMode:I.SINGLE,player1Name:"",player2Name:"Player 2",difficulty:x.MEDIUM,vehicleType:T.SPORT}),[o,u]=s.useState(!1),[S,m]=s.useState(!1);return{settings:i,gameStarted:o,redirectToGame:S,updateSettings:C=>{v(A=>({...A,...C}))},startGame:()=>{u(!0),setTimeout(()=>{u(!1),m(!0)},1500)},setRedirectToGame:m}},ne=()=>{const{settings:i,gameStarted:v,redirectToGame:o,updateSettings:u,startGame:S,setRedirectToGame:m}=te();if(v)return t.jsx(ee,{});if(o)return t.jsx(re,{...i,backToSettings:()=>m(!1)});const f=d=>{d.preventDefault(),S()};return t.jsxs(R.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:"carracing-initial-container",children:[t.jsx("h2",{children:"Car Racing Settings"}),t.jsxs("form",{onSubmit:f,className:"carracing-settings-form",children:[t.jsxs("div",{className:"form-group",children:[t.jsx("label",{children:"Game Mode:"}),t.jsx("div",{className:"radio-group",children:t.jsxs("label",{children:[t.jsx("input",{type:"radio",value:I.SINGLE,checked:i.gameMode===I.SINGLE,onChange:d=>u({gameMode:d.target.value})}),"Single Player"]})})]}),t.jsxs("div",{className:"form-group",children:[t.jsx("label",{htmlFor:"player1",children:"Player 1 Name:"}),t.jsx("input",{type:"text",id:"player1",value:i.player1Name,onChange:d=>u({player1Name:d.target.value}),required:!0,placeholder:"Enter Player 1 name"})]}),i.gameMode===I.SINGLE&&t.jsxs("div",{className:"form-group",children:[t.jsx("label",{children:"Difficulty Level:"}),t.jsxs("select",{value:i.difficulty,onChange:d=>u({difficulty:d.target.value}),children:[t.jsx("option",{value:x.EASY,children:"Easy"}),t.jsx("option",{value:x.MEDIUM,children:"Medium"}),t.jsx("option",{value:x.HARD,children:"Hard"})]})]}),t.jsxs("div",{className:"form-group",children:[t.jsx("label",{children:"Vehicle Type:"}),t.jsxs("div",{className:"vehicle-options",children:[t.jsxs(R.div,{className:`vehicle-option ${i.vehicleType===T.SPORT?"selected":""}`,onClick:()=>u({vehicleType:T.SPORT}),whileHover:{scale:1.03},whileTap:{scale:.98},children:[t.jsx("div",{className:"vehicle-icon",children:"🏎️"}),t.jsx("p",{children:"Sport Car"}),t.jsx("small",{children:"Fast & Agile"})]}),t.jsxs(R.div,{className:`vehicle-option ${i.vehicleType===T.SUV?"selected":""}`,onClick:()=>u({vehicleType:T.SUV}),whileHover:{scale:1.03},whileTap:{scale:.98},children:[t.jsx("div",{className:"vehicle-icon",children:"🚙"}),t.jsx("p",{children:"SUV"}),t.jsx("small",{children:"Balanced Performance"})]}),t.jsxs(R.div,{className:`vehicle-option ${i.vehicleType===T.TRUCK?"selected":""}`,onClick:()=>u({vehicleType:T.TRUCK}),whileHover:{scale:1.03},whileTap:{scale:.98},children:[t.jsx("div",{className:"vehicle-icon",children:"🚚"}),t.jsx("p",{children:"Truck"}),t.jsx("small",{children:"Powerful & Sturdy"})]})]})]}),t.jsx(R.button,{type:"submit",whileHover:{scale:1.05},whileTap:{scale:.95},className:"start-game-btn",children:"Start Game"})]})]})};export{ne as default};
